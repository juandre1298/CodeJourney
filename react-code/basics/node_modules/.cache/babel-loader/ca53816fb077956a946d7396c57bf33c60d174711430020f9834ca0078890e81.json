{"ast":null,"code":"var _jsxFileName = \"/home/juandre/CodeJourney/CodeJourney/react-code/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { User } from \"./User\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [age, setAge] = useState(0);\n  const isGreen = false;\n  const names = [\"Juan\", \"pedro\", \"lukas\", \"peppa pig\", \"uso carruso\", \"etc\"];\n  const users = [{\n    name: \"Juan\",\n    age: 21\n  }, {\n    name: \"Jake\",\n    age: 25\n  }, {\n    name: \"Jessica\",\n    age: 45\n  }];\n  const planets = [{\n    name: \"Mars\",\n    isGasPlanet: false\n  }, {\n    name: \"Earth\",\n    isGasPlanet: false\n  }, {\n    name: \"Jupiter\",\n    isGasPlanet: true\n  }, {\n    name: \"Venus\",\n    isGasPlanet: false\n  }, {\n    name: \"Neptune\",\n    isGasPlanet: true\n  }, {\n    name: \"Uranus\",\n    isGasPlanet: true\n  }];\n  let gasplanets = planets.filter((planet, key) => {\n    return planet.isGasPlanet;\n  });\n  let increaseAge = () => {\n    age = age + 1;\n    console.log(age);\n    setAge(age);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(GetNameComponent, {\n      name: \"juan\",\n      age: 24,\n      email: \"juan@gmail.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetNameComponent, {\n      name: \"oscar\",\n      age: 41,\n      email: \"oscar@gmail.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GetNameComponent, {\n      name: \"CR7\",\n      age: 37,\n      email: \"cristiano@gmail.com\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), age >= 18 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" over age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" under age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 41\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: isGreen ? \"green\" : \"red\"\n      },\n      children: \" conditional style\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isGreen && /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" This is a button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), names.map((name, key) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: name\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }, this);\n    }), users.map((user, key) => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        name: user.name,\n        age: user.age\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", \"excercise: can only display the true isGasPlanet of the planets Array\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"creating a new array using a filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), gasplanets.map((planet, key) => {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: planet.name\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" atempt 2 of solve the excercise \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"using if conditional insite of map function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), planets.map((planet, key) => {\n      if (planet.isGasPlanet) return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: planet.name\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 40\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" atempt 3 of solve the excercise \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"using && conditional insite of map function\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), planets.map((planet, key) => planet.isGasPlanet && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: planet.name\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 48\n    }, this)), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"STATES IN REACT USESTATE HOOK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), age, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increaseAge,\n      children: \"Increase Age\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n// here component need to begin with capital letter\n_s(App, \"KD3UlARuDRuU8a/ZmG4MVmQCZcc=\");\n_c = App;\nconst GetNameComponent = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.age\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GetNameComponent;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GetNameComponent\");","map":{"version":3,"names":["User","useState","App","age","setAge","isGreen","names","users","name","planets","isGasPlanet","gasplanets","filter","planet","key","increaseAge","console","log","color","map","user","GetNameComponent","props","email"],"sources":["/home/juandre/CodeJourney/CodeJourney/react-code/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { User } from \"./User\";\nimport { useState } from \"react\";\nfunction App() {\n  const [age, setAge] = useState(0);\n\n  const isGreen = false;\n  const names = [\"Juan\", \"pedro\", \"lukas\", \"peppa pig\", \"uso carruso\", \"etc\"];\n  const users = [\n    { name: \"Juan\", age: 21 },\n    { name: \"Jake\", age: 25 },\n    { name: \"Jessica\", age: 45 },\n  ];\n  const planets = [\n    { name: \"Mars\", isGasPlanet: false },\n    { name: \"Earth\", isGasPlanet: false },\n    { name: \"Jupiter\", isGasPlanet: true },\n    { name: \"Venus\", isGasPlanet: false },\n    { name: \"Neptune\", isGasPlanet: true },\n    { name: \"Uranus\", isGasPlanet: true },\n  ];\n\n  let gasplanets = planets.filter((planet, key) => {\n    return planet.isGasPlanet;\n  });\n  let increaseAge = () => {\n    age = age + 1;\n    console.log(age);\n    setAge(age);\n  };\n  return (\n    <div className=\"App\">\n      <GetNameComponent name=\"juan\" age={24} email=\"juan@gmail.com\" />\n      <GetNameComponent name=\"oscar\" age={41} email=\"oscar@gmail.com\" />\n      <GetNameComponent name=\"CR7\" age={37} email=\"cristiano@gmail.com\" />\n      {/* example with conditionals */}\n      {/* basicaly you can do conditional as you did in vanilla JS */}\n      {age >= 18 ? <h1> over age</h1> : <h1> under age</h1>}\n      {/* here style need to be placed as object */}\n      <h1 style={{ color: isGreen ? \"green\" : \"red\" }}> conditional style</h1>\n      {/* another way to make conditionals in react */}\n      {isGreen && <button> This is a button</button>}\n      {/* array function */}\n      {names.map((name, key) => {\n        return <h1 key={key}>{name}</h1>;\n      })}\n      {/* working with objects */}\n\n      {/* an alternative much cooler is this one that calls the component from another js file named User.js*/}\n      {users.map((user, key) => {\n        return <User name={user.name} age={user.age} />;\n      })}\n      <p>\n        {\" \"}\n        excercise: can only display the true isGasPlanet of the planets Array{\" \"}\n      </p>\n      <p>creating a new array using a filter</p>\n      {gasplanets.map((planet, key) => {\n        return <h1 key={key}>{planet.name}</h1>;\n      })}\n      <p> atempt 2 of solve the excercise </p>\n      <p>using if conditional insite of map function</p>\n      {planets.map((planet, key) => {\n        if (planet.isGasPlanet) return <h1 key={key}>{planet.name}</h1>;\n      })}\n      <p> atempt 3 of solve the excercise </p>\n      <p>using && conditional insite of map function</p>\n      {planets.map(\n        (planet, key) => planet.isGasPlanet && <h1 key={key}>{planet.name}</h1>\n      )}\n      <h1>STATES IN REACT USESTATE HOOK</h1>\n      {age}\n      <button onClick={increaseAge}>Increase Age</button>\n    </div>\n  );\n}\n\n// here component need to begin with capital letter\nconst GetNameComponent = (props) => {\n  return (\n    <div>\n      <h1>{props.name}</h1>\n      <h1>{props.age}</h1>\n      <h1>{props.email}</h1>\n    </div>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}